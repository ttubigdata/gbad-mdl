RELEASE NOTES

Version 1.6

- Fixed logic to handle the case where an instance whose score is the most
  anomalous (up to that point) does not get any instances added because they
  overlap with the best substructure instances, resulting in subsequent
  possibly anomalous instances not getting added because their score is not as
  low - resulting in no anomalous instances being reported.
- Added logic to store number of best substructure instances from the previous
  iteration so that the current iteration can correctly calculate the
  probability of the current extension.
- Fix bug in main.c where the check for the iteration did not also include
  a check for parameters->prob.  This resulted in a segmentation fault when
  running GBAD for multiple iterations when no anomaly detection algorithms are
  specified.
- Fixed GBAD-MPS so that it does not consider instances as anomalous if they
  match exactly with the normative pattern (which can happen when SUBDUE
  discovers multiple normative patterns that are identical because they are
  arrived at from two different directions).

Version 1.5

- Added various performance fixes to speed-up GBAD's execution time.
- Added checks in gbad.c before calls to strncmp() to test and make sure that 
  the label being compared to "SUB_" is a string, and check for at least
  one edge (i.e., anomaly is not just an instance of a single SUB_ vertex).
- Removed obsolete function.
- Put check for outputLevel > 2 for outputting compressed graph.

Version 1.4

- Modified GBAD-P algorithm so that it now goes off of the best substructure
  at each iteration, rather than continually going off of the most anomalous
  substructure.
- Fixed bug in GBAD-P logic that was incorrectly calculating the number of
  instances, and thus affecting the probabilistic score.
- Changed logic to allow for anlyzing edges that go between two SUB_#
  substructures that are the same (e.g., an edge between a SUB_1 and a SUB_1).
  Also, now accepting single vertices, thus allowing for the scenario of
  a self-edge from a SUB_#.
- Added code in compress.c to check that the file that needs to be created
  can be created.

Version 1.3

- Fixed GBAD-P algorithm such that it now outputs ALL instances that have
  the same anomalous score, rather than just the first one that is most
  anomalous.
- Fixed bug in FlagAnomalousVerticesAndEdges (existed in all previous versions 
  of GBAD).

Version 1.2

- Re-implemented GBAD-MDL algorithm so that it now is more like the actual 
  algorithm, and is more accurate in reporting the normative pattern.  The basic
  change was to use a threshold of 0.0 when searching for the normative pattern,
  then using the -mdl threshold to find those non-normative substructures that 
  are closest to the normative pattern without matching exactly (and are under 
  the user-specified -mdl threshold).
- For the GBAD-MPS algorithm, an entire instance is anomalous.  So, changed the
  reporting the anomaly to report the complete instance and not report any
  individual vertices or edges as anomalies.

Version 1.1

- Fix to matching on SUB_# when using the GBAD-P approach
- Addition of tracking so that across multiple iterations (like with GBAD-P) we 
  will know what the original vertex and example (XP) numbers were.

